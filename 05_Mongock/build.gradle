/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.4.3' apply false
//    id 'io.spring.dependency-management' version '1.1.7'
    id 'io.freefair.lombok' version '8.12.2'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

//dependencyManagement {
//    imports {
 //       mavenBom 'org.springframework.boot:spring-boot-dependencies:3.4.3'
 //       mavenBom 'io.mongock:mongock-bom:5.5.0'
//    }
//}

dependencies {
    implementation platform ('org.springframework.boot:spring-boot-dependencies:3.4.3')
    implementation platform ('io.mongock:mongock-bom:5.5.0')

    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'com.github.ben-manes.caffeine:caffeine'

    // Open API
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.28'
    runtimeOnly 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Mongock
    implementation 'io.mongock:mongock-springboot-v3'
    implementation 'io.mongock:mongodb-springdata-v4-driver'

    // This dependency is used by the application.
    implementation libs.guava

}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.10.3')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}
